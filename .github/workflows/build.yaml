name: Build & Test
on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main
    types: [closed]
jobs:
  build-backend:
    name: Build & Test Go Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Dump context
        env:
          GITHUB_CONTEXT:  ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Check out source code
        uses: actions/checkout@v1
      - name: Install dependencies
        run: go mod tidy
      - name: Build
        run: go build .
      - name: Test
        run: go test -v .

      - name: Cache Go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-


  build-deploy:
    name: Validate Deploy Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deploy
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.2
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: false
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
  release-version:
    if: github.event.pull_request.merged == 'true'
    needs: [build-backend, build-deploy]
    name: Create a release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Package Artefact
        working-directory: backend
        run: GOOS=linux GOARCH=amd64 go build -o main
      - name: Create Tag
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatice_release_tag: "latest"
          prerelease: false
          files: |
            backend/main
#      - name: Publish Artefact
#        uses: actions/upload-artifact@v2
#        with:
#          name: "main"
#          path: "backend/main"
